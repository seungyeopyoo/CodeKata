// 콜라츠 추측
// 제출 내역
// 문제 설명
// 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될 때까지 다음 작업을 반복하면, 
// 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.

// 1-1. 입력된 수가 짝수라면 2로 나눕니다.
// 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
// 2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
// 예를 들어, 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다. 
// 위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, solution을 완성해 주세요.
//  단, 주어진 수가 1인 경우에는 0을, 작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환해 주세요.

// 제한 사항
// 입력된 수, num은 1 이상 8,000,000 미만인 정수입니다.
// 입출력 예
// n	result
// 6	8
// 16	4
// 626331	-1
// 입출력 예 설명
// 입출력 예 #1
// 문제의 설명과 같습니다.

// 입출력 예 #2
// 16 → 8 → 4 → 2 → 1 이 되어 총 4번 만에 1이 됩니다.

// 입출력 예 #3
// 626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야 합니다

//  짝수면 2로 계속 나눠준다 홀수면 3 곱하고 1더하고
// 나머지가 ===1  될때까지for 문을진행 
// 주어진수가 !==1이면 횟수출력 = i를출력
// else면 0출력 500번 해도 안되면 ..은 어케 출력? 

let collatz = function (n) {
    for (let i = 0; i < 500; i++) {
        if (n !== 1) {
            n = n % 2 === 0 ? n / 2 : n * 3 + 1; //짝수면 2로 나누고 홀수면 *3+1
        } else {
            return i
        }
    } return -1
}

console.log(collatz(6)); // 8
console.log(collatz(16)); // 4
console.log(collatz(626331)); // -1
